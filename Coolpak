using System;
using System.Collections.Generic;

public class Animal
{
    public int AnimalId { get; set; }
    public string Name { get; set; }
    public string Type { get; set; }
    public int Age { get; set; }

    public Animal()
    {
        Name = string.Empty;
        Type = string.Empty;
    }
}

public class AnimalManager
{
    public Dictionary<int, Animal> animals = new Dictionary<int, Animal>();

    public void AddAnimal(Animal animal)
    {
        if (animals.ContainsKey(animal.AnimalId))
        {
            Console.WriteLine($"An animal with ID {animal.AnimalId} already exists.");
        }
        else
        {
            animals[animal.AnimalId] = animal;
            Console.WriteLine("Animal added successfully.");
        }
    }

    public void EditAnimal(int animalId, string newName, string newType, int newAge)
    {
        if (animals.ContainsKey(animalId))
        {
            animals[animalId].Name = newName;
            animals[animalId].Type = newType;
            animals[animalId].Age = newAge;
            Console.WriteLine("Animal details updated successfully.");
        }
        else
        {
            Console.WriteLine($"No animal found with ID {animalId}.");
        }
    }

    public void DeleteAnimal(int animalId)
    {
        if (animals.ContainsKey(animalId))
        {
            animals.Remove(animalId);
            Console.WriteLine("Animal deleted successfully.");
        }
        else
        {
            Console.WriteLine($"No animal found with ID {animalId}.");
        }
    }

    public void ListAnimals()
    {
        if (animals.Count == 0)
        {
            Console.WriteLine("No animals found.");
            return;
        }

        Console.WriteLine("\nList of all animals:");
        foreach (var animal in animals.Values)
        {
            Console.WriteLine($"ID: {animal.AnimalId}, Name: {animal.Name}, Type: {animal.Type}, Age: {animal.Age}");
        }
    }
}

public class Program
{
    public static void Main(string[] args)
    {
        AnimalManager animalManager = new AnimalManager();
        bool exit = false;

        while (!exit)
        {
            Console.WriteLine("\nMenu:");
            Console.WriteLine("1. Add Animal");
            Console.WriteLine("2. Edit Animal by ID");
            Console.WriteLine("3. List All Animals");
            Console.WriteLine("4. Delete Animal by ID");
            Console.WriteLine("5. Exit");
            Console.Write("Enter your choice: ");
            string input = Console.ReadLine();

            switch (input)
            {
                case "1":
                    Console.Write("Enter Animal ID: ");
                    int addId = int.Parse(Console.ReadLine());
                    Console.Write("Enter Animal Name: ");
                    string name = Console.ReadLine();
                    Console.Write("Enter Animal Type: ");
                    string type = Console.ReadLine();
                    Console.Write("Enter Animal Age: ");
                    int age = int.Parse(Console.ReadLine());

                    Animal newAnimal = new Animal
                    {
                        AnimalId = addId,
                        Name = name,
                        Type = type,
                        Age = age
                    };
                    animalManager.AddAnimal(newAnimal);
                    break;

                case "2":
                    Console.Write("Enter Animal ID to edit: ");
                    int editId = int.Parse(Console.ReadLine());

                    if (animalManager.animals.ContainsKey(editId))
                    {
                        Console.Write("Enter new name: ");
                        string newName = Console.ReadLine();
                        Console.Write("Enter new Animal type: ");
                        string newType = Console.ReadLine();
                        Console.Write("Enter new Animal age: ");
                        int newAge = int.Parse(Console.ReadLine());

                        animalManager.EditAnimal(editId, newName, newType, newAge);
                    }
                    else
                    {
                        Console.WriteLine($"No animal found with ID {editId}.");
                    }
                    break;

                case "3":
                    animalManager.ListAnimals();
                    break;

                case "4":
                    Console.Write("Enter Animal ID to delete: ");
                    int deleteId = int.Parse(Console.ReadLine());
                    animalManager.DeleteAnimal(deleteId);
                    break;

                case "5":
                    Console.WriteLine("Exiting program...");
                    exit = true;
                    break;

                default:
                    Console.WriteLine("Invalid choice, please try again.");
                    break;
            }
        }
    }
}
